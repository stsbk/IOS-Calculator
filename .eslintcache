[{"C:\\Users\\hp840g1\\WebstormProjects\\IOS-Calculator\\src\\index.js":"1","C:\\Users\\hp840g1\\WebstormProjects\\IOS-Calculator\\src\\Components\\App\\index.js":"2","C:\\Users\\hp840g1\\WebstormProjects\\IOS-Calculator\\src\\Components\\App\\constants.js":"3","C:\\Users\\hp840g1\\WebstormProjects\\IOS-Calculator\\src\\Components\\Button\\index.js":"4"},{"size":187,"mtime":1611266581143,"results":"5","hashOfConfig":"6"},{"size":2364,"mtime":1611269992319,"results":"7","hashOfConfig":"6"},{"size":2650,"mtime":1611269748385,"results":"8","hashOfConfig":"6"},{"size":307,"mtime":1611269146399,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2gdclw",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"C:\\Users\\hp840g1\\WebstormProjects\\IOS-Calculator\\src\\index.js",[],"C:\\Users\\hp840g1\\WebstormProjects\\IOS-Calculator\\src\\Components\\App\\index.js",["20"],"C:\\Users\\hp840g1\\WebstormProjects\\IOS-Calculator\\src\\Components\\App\\constants.js",["21","22"],"const REMOVE_FUNCTION_OPERATOR = 'AC';\r\nconst NEGATIVE_FUNCTION_OPERATOR = 'Â±';\r\nconst PERSENT_FUNCTION_OPERATOR = '%';\r\n\r\nconst MEMORY_CLEAR = 'mc';\r\nconst MEMORY_READ = 'mr';\r\nconst MEMORY_PLUS = 'm+';\r\nconst MEMORY_MINUS = 'm-';\r\n\r\nfunction ButtonContent(content, type = '') {\r\n    this.content = content;\r\n    this.type = type;\r\n}\r\n\r\nexport const actionButtons = [\r\n    new ButtonContent(REMOVE_FUNCTION_OPERATOR, 'function'),\r\n    new ButtonContent(NEGATIVE_FUNCTION_OPERATOR, 'function'),\r\n    new ButtonContent(PERSENT_FUNCTION_OPERATOR, 'function'),\r\n    new ButtonContent('/', 'operator'),\r\n    new ButtonContent(MEMORY_CLEAR, 'memory'),\r\n    new ButtonContent(MEMORY_READ, 'memory'),\r\n    new ButtonContent(MEMORY_MINUS, 'memory'),\r\n    new ButtonContent(MEMORY_PLUS, 'memory-plus'),\r\n    new ButtonContent('7'),\r\n    new ButtonContent('8'),\r\n    new ButtonContent('9'),\r\n    new ButtonContent('x', 'operator'),\r\n    new ButtonContent('4'),\r\n    new ButtonContent('5'),\r\n    new ButtonContent('6'),\r\n    new ButtonContent('-', 'operator'),\r\n    new ButtonContent('1'),\r\n    new ButtonContent('2'),\r\n    new ButtonContent('3'),\r\n    new ButtonContent('+', 'operator'),\r\n    new ButtonContent('0'),\r\n    new ButtonContent('.'),\r\n    new ButtonContent('=', 'equals')\r\n];\r\n\r\nexport const actionOperator = (operator, value, memoryValue) => {\r\n    const parsedValue = parseFloat(value);\r\n    const parsedMemoryValue = parseFloat(memoryValue);\r\n    switch (operator) {\r\n        case '+':\r\n            return parsedValue + parsedMemoryValue;\r\n        case '-':\r\n            return parsedMemoryValue - parsedValue;\r\n        case '/':\r\n            return parsedMemoryValue / parsedValue;\r\n        case 'x':\r\n            return parsedMemoryValue * parsedValue;\r\n        default:\r\n            return '';\r\n    }\r\n};\r\n\r\nexport const functionOperators = (operator, value) => {\r\n    const parsedValue = parseFloat(value);\r\n    switch (operator) {\r\n        case REMOVE_FUNCTION_OPERATOR:\r\n            return '';\r\n        case NEGATIVE_FUNCTION_OPERATOR:\r\n            return parsedValue * -1;\r\n        case PERSENT_FUNCTION_OPERATOR:\r\n            return parsedValue / 100;\r\n    }\r\n};\r\n\r\nexport const memoryOperators = (operator, value, saver, setValue, setSaver) => {\r\n    switch (operator) {\r\n        case MEMORY_CLEAR:\r\n            setSaver('');\r\n            break;\r\n        case MEMORY_READ:\r\n            setValue(saver);\r\n            break;\r\n        case MEMORY_PLUS:\r\n            setSaver(value);\r\n            setValue('');\r\n            break;\r\n        case MEMORY_MINUS:\r\n            setSaver((value * -1).toString());\r\n            break;\r\n    }\r\n};\r\n",["23","24"],"C:\\Users\\hp840g1\\WebstormProjects\\IOS-Calculator\\src\\Components\\Button\\index.js",[],{"ruleId":"25","severity":1,"message":"26","line":16,"column":9,"nodeType":"27","endLine":16,"endColumn":32},{"ruleId":"28","severity":1,"message":"29","line":60,"column":5,"nodeType":"30","messageId":"31","endLine":67,"endColumn":6},{"ruleId":"28","severity":1,"message":"29","line":71,"column":5,"nodeType":"30","messageId":"31","endLine":85,"endColumn":6},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},"react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-global-assign","no-unsafe-negation"]